[tool.poetry]
name = "skill-plotter"
version = "0.4.2"
description = "CLI tool to generate a plot of your skills"
authors = ["Andre Wohnsland <50302161+AndreWohnsland@users.noreply.github.com>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "skill_plotter" }]
keywords = ["skill", "plot", "cli", "tool", "cv", "resume"]
homepage = "https://skillplotter.readthedocs.io/"
documentation = "https://skillplotter.readthedocs.io"
repository = "https://github.com/AndreWohnsland/skillplotter"

[tool.poetry.scripts]
skill-plotter = "skill_plotter.main:app"

[tool.poetry.dependencies]
python = "<3.13,>=3.10"
matplotlib = "^3.10.1"
typer = {extras = ["all"], version = "^0.15.2"}
pandas = "^2.2.3"
jsonschema = "^4.23.0"


[tool.poetry.group.dev.dependencies]
mkdocs = "^1.6.1"
jupyterlab = "^4.3.6"
mkdocs-material = "^9.6.9"
ruff = "^0.11.2"
mypy = "^1.15.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py312"
line-length = 120

[tool.ruff.lint]
select = [
  "C", # Convention
  "D", # pydocstyle 
  "E", # pycodestyle
  "F", # Pyflakes
  "I", # isort 
  "ICN001", # {name} should be imported as {asname},
  "R", # Refactor
  "RUF", # Ruff
  "SIM", # flake8-simplify
  "UP", # pyupgrade
  "W", # Pylint (Warning)
]
ignore = [
  "D100", # Missing docstring in public module
  "D101", # Missing docstring in public class
  "D102", # Missing docstring in public method
  "D103",  # Missing docstring in public function
  "D104", # Missing docstring in public package
  "D105", # Missing docstring in magic method
  "D203", # 1 blank line required before class docstring
  "D213", # Multi-line docstring summary should start at the second line
]
per-file-ignores = {"main.py" = ["UP007"]} # Annotated does not support | None for optional

[tool.mypy]
disable_error_code = ["annotation-unchecked", "import-untyped"]